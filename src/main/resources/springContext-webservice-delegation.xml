<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cxf="http://cxf.apache.org/core"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">

	<!-- cxf -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />


	<!-- REST  -->
	<bean id="delegationAuthenticationRestService" class="com.t3c.anchel.webservice.delegation.impl.AuthenticationRestServiceImpl">
		<constructor-arg ref="wsDelegationGenericFacade" />
		<constructor-arg ref="wsDelegationUserFacade" />
	</bean>

	<bean id="delegationUserRestService" class="com.t3c.anchel.webservice.delegation.impl.UserRestServiceImpl">
		<constructor-arg ref="wsDelegationUserFacade" />
	</bean>

	<bean id="delegationDocumentRestService" class="com.t3c.anchel.webservice.delegation.impl.DocumentRestServiceImpl">
		<constructor-arg ref="wsDelegationDocumentFacade" />
		<constructor-arg ref="wsDelegationAsyncTaskFacade" />
		<constructor-arg ref="wsDocumentAsyncFacade" />
		<constructor-arg ref="taskExecutor" />
		<constructor-arg value="${linshare.rest.files.size.validation}" />
	</bean>

	<bean id="delegationGuestRestService" class="com.t3c.anchel.webservice.delegation.impl.GuestRestServiceImpl">
		<constructor-arg ref="wsDelegationGuestFacade" />
	</bean>

	<bean id="delegationThreadRestService" class="com.t3c.anchel.webservice.delegation.impl.ThreadRestServiceImpl">
		<constructor-arg ref="wsDelegationThreadFacade" />
	</bean>

	<bean id="delegationThreadEntryRestService" class="com.t3c.anchel.webservice.delegation.impl.ThreadEntryRestServiceImpl">
		<constructor-arg ref="wsDelegationThreadEntryFacade" />
		<constructor-arg ref="wsThreadEntryAsyncFacade" />
		<constructor-arg ref="wsDelegationAsyncTaskFacade" />
		<constructor-arg ref="taskExecutor" />
		<constructor-arg value="${linshare.rest.files.size.validation}" />
	</bean>

	<bean id="delegationThreadMemberRestService" class="com.t3c.anchel.webservice.delegation.impl.ThreadMemberRestServiceImpl">
		<constructor-arg ref="wsDelegationThreadMemberFacade" />
	</bean>

	<bean id="delegationShareRestService" class="com.t3c.anchel.webservice.delegation.impl.ShareRestServiceImpl">
		<constructor-arg ref="wsDelegationShareFacade" />
	</bean>

	<bean id="delegationShareEntryGroupRestService" class="com.t3c.anchel.webservice.delegation.impl.ShareEntryGroupRestServiceImpl">
		<constructor-arg ref="wsDelegationShareEntryGroupFacade" />
	</bean>

	<bean id="delegationMailingListRestService" class="com.t3c.anchel.webservice.delegation.impl.MailingListRestServiceImpl">
		<constructor-arg ref="wsMailingListFacade" />
	</bean>

	<bean id="delegationUploadRequestRestService" class="com.t3c.anchel.webservice.delegation.impl.UploadRequestRestServiceImpl">
		<constructor-arg ref="wsUploadRequestFacade" />
	</bean>

	<bean id="delegationUploadRequestGroupRestService" class="com.t3c.anchel.webservice.delegation.impl.UploadRequestGroupRestServiceImpl">
		<constructor-arg ref="wsUploadRequestGroupFacade" />
	</bean>

	<bean id="delegationUploadRequestTemplateRestService" class="com.t3c.anchel.webservice.delegation.impl.UploadRequestTemplateRestServiceImpl">
		<constructor-arg ref="wsUploadRequestTemplateFacade" />
	</bean>

	<bean id="delegationAuditLogEntryDelegationRestService" class="com.t3c.anchel.webservice.delegation.impl.AuditLogEntryDelegationRestServiceImpl">
		<constructor-arg ref="wsAuditLogEntryUserFacade" />
	</bean>

	<jaxrs:server id="restDelegationContainer" address="/rest/delegation">
		<jaxrs:serviceBeans>
			<ref bean="delegationAuthenticationRestService" />
			<ref bean="delegationUserRestService" />
			<ref bean="delegationDocumentRestService" />
			<ref bean="delegationGuestRestService" />
			<ref bean="delegationThreadRestService" />
			<ref bean="delegationThreadEntryRestService" />
			<ref bean="delegationThreadMemberRestService" />
			<ref bean="delegationShareRestService" />
			<ref bean="delegationShareEntryGroupRestService" />
			<ref bean="delegationMailingListRestService" />
			<ref bean="delegationUploadRequestRestService" />
			<ref bean="delegationUploadRequestGroupRestService" />
			<ref bean="delegationUploadRequestTemplateRestService" />
			<ref bean="delegationAuditLogEntryDelegationRestService" />
		</jaxrs:serviceBeans>
		<jaxrs:extensionMappings>
			<entry key="json" value="application/json" />
			<entry key="xml" value="application/xml" />
		</jaxrs:extensionMappings>
		<jaxrs:providers>
			<!--  ExceptionMappers. -->
			<ref bean="illegalArgumentExceptionMapper" />
			<ref bean="businessExceptionMapper" />
			<ref bean="genericExceptionMapper" />
			<ref bean="webApplicationExceptionMapper" />
			<ref bean="jsonParseExceptionMapper" />
			<ref bean="unrecognizedPropertyExceptionMapper" />
			<!-- Json provider for serialisation -->
			<ref bean="jsonProvider" />
		</jaxrs:providers>
		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>
		<jaxrs:inInterceptors>
			<!-- For debug only : print input message -->
<!-- 			<ref bean="logInbound" /> -->
			<!-- This interceptor is designed to store some context properties in message exchange context for timingOutInterceptor -->
			<ref bean="timingInInterceptor" />
		</jaxrs:inInterceptors>
		<jaxrs:outInterceptors>
			<!-- For debug only : print output  message -->
<!--             	<ref bean="logOutbound" /> -->
			<!-- This interceptor is designed compute request execution time.-->
			<ref bean="timingOutInterceptor" />
		</jaxrs:outInterceptors>
		<jaxrs:inFaultInterceptors>
		</jaxrs:inFaultInterceptors>
		<jaxrs:outFaultInterceptors>
		</jaxrs:outFaultInterceptors>
	</jaxrs:server>
</beans>
